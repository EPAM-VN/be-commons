# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop" ]

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_VERSION: ${{ steps.vars.outputs.IMAGE_VERSION }}
    steps:
    - name: Set environment variables
      id: vars
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "IMAGE_VERSION=${{ github.run_number }}" >> "$GITHUB_OUTPUT"
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "IMAGE_VERSION=latest" >> "$GITHUB_OUTPUT"
        fi
  build:
    runs-on: ubuntu-latest
    needs: [setup-env]
    env:
      IMAGE_VERSION: ${{ needs.setup-env.outputs.IMAGE_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            phuocngoepam/sephora-be-commons:${{ env.IMAGE_VERSION }}
